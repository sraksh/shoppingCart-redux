{"version":3,"sources":["components/Header/Header.js","components/ProductListItem/ProductListItem.js","components/ProductList/ProductList.js","components/CartSummary/CartSummary.js","actions/index.js","App.js","serviceWorker.js","reducers/productItems.js","reducers/cartItems.js","reducers/index.js","store/index.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","ProductListItem","addProductToCart","data","_this","props","actions","addItem","removeProductFromCart","id","removeItem","_this2","this","src","product","image","alt","name","price","isAddedToCart","onClick","ProductList","fetchProducts","productItems","length","map","item","components_ProductListItem_ProductListItem","Object","assign","key","CartSummary","total","cartItems","reduce","b","items","currency","emptyBlock","itemsList","type","populateProducts","res","payload","dispatch","axios","get","then","App","components_Header_Header","components_ProductList_ProductList","components_CartSummary_CartSummary","connect","state","bindActionCreators","Actions","Boolean","window","location","hostname","match","initialState","arguments","undefined","action","objectSpread","concat","toConsumableArray","find","filter","element","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","wrapper","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dee73e64.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"common-header-wrapper\">\r\n        <header className=\"common-header\">\r\n          <h1>Shopping Cart</h1>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './ProductListItem.css';\r\n\r\nclass ProductListItem extends Component {\r\n  \r\n  addProductToCart = (data) => {\r\n    this.props.actions.addItem(data);\r\n  }\r\n  removeProductFromCart = (id) => {\r\n    this.props.actions.removeItem(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={this.props.product.image} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{this.props.product.name}</h5>\r\n          <p className=\"card-text\">{this.props.product.price}</p>\r\n        </div>\r\n        <button className={this.props.product.isAddedToCart ? \"btn btn-danger\" : \"btn btn-primary\"} onClick={this.props.product.isAddedToCart ? () => this.removeProductFromCart(this.props.product.id) : () => this.addProductToCart(this.props.product) }> {this.props.product.isAddedToCart ? \"Remove\" : \"Add To Cart\"} </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductListItem;\r\n","import React, { Component } from 'react';\r\nimport './ProductList.css';\r\nimport ProductListItem from '../ProductListItem/ProductListItem.js';\r\n\r\nclass ProductList extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.actions.fetchProducts();\r\n  }\r\n\r\n  render() {\r\n    if(this.props.productItems.productItems.length) {\r\n    var productItems = this.props.productItems.productItems[0].map(item => { \r\n      return (\r\n          <ProductListItem \r\n            { ...this.props }\r\n            product = {item}\r\n            key = {item.id}\r\n          />\r\n      );\r\n      });\r\n\r\n      return(\r\n        <div className=\"products-container\">\r\n          { productItems }\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(<div>Loading.....</div>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from 'react';\r\nimport './CartSummary.css';\r\n\r\nclass CartSummary extends Component {\r\n  \r\n  render() {\r\n    var total = this.props.cartItems.cartItems.reduce((a, b) => {\r\n      return a + b.price;\r\n    }, 0);\r\n\r\n    var items = this.props.cartItems.cartItems.map(item => {\r\n      return (\r\n        <li key={item.id} className=\"cart-item list-group-item\">\r\n          <span className=\"cart-item__name\">{item.name}</span>\r\n          <span className=\"cart-item__price\">{item.price} {item.currency}</span>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    var emptyBlock = (\r\n      <div className=\"alert alert-info\">Cart is empty</div>\r\n    );\r\n    \r\n    var itemsList = (\r\n      <ul className=\"list-group list-group-flush\">\r\n        {items}\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <div className=\"card-summary-container\">\r\n        <h5 className=\"card-summary\">Cart summary</h5>\r\n          {this.props.cartItems.cartItems.length ? itemsList : emptyBlock}\r\n        <div className=\"cart__total list-group-item\">\r\n          <span className=\"cart__total__text\">Total:</span>\r\n          <span className=\"cart__total__amount\">{total} EUR</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartSummary;\r\n","import axios from 'axios';\r\n\r\nconst URL = \"https://raw.githubusercontent.com/sraksh/sHOPcart/master/src/data/products.json\";\r\n\r\nexport const addItem = (data) => ({\r\n  type: 'ADD_ITEM',\r\n  data\r\n});\r\n\r\nexport const removeItem = id => ({\r\n  type: 'REMOVE_ITEM',\r\n  id\r\n});\r\n\r\nexport const populateProducts = res => ({\r\n  type: 'FETCH_PRODUCTS',\r\n  payload: res\r\n});\r\n\r\nexport const fetchProducts = () => {\r\n  return (dispatch) => {\r\n    axios.get(URL).then((res) => {\r\n      dispatch(populateProducts(res));\r\n    });\r\n  }\r\n \r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Header from './components/Header/Header.js';\nimport ProductList from './components/ProductList/ProductList.js';\nimport CartSummary from './components/CartSummary/CartSummary.js';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from './actions';\n\nimport './App.css';\n\nconst mapStateToProps = state => ({\n  productItems: state.productItems,\n  cartItems: state.cartItems,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Header />\n       <div className=\"shopping-cart-container\">\n        <ProductList {...this.props}/>\n        <CartSummary cartItems={this.props.cartItems}/>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import * as action from '../constants/actions';\r\n\r\nlet initialState = {\r\n  productItems: []\r\n};\r\n\r\n\r\nfunction productItems(state=initialState, action) {\r\n  switch(action.type) {\r\n    case 'FETCH_PRODUCTS':\r\n      return {\r\n        ...state,\r\n        productItems: [...state.productItems, action.payload.data]\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default productItems;\r\n","let initialState = {\r\n  cartItems: []\r\n};\r\n\r\nfunction cartItems(state=initialState, action) {\r\n  switch(action.type) {\r\n    case 'ADD_ITEM':\r\n    action.data.isAddedToCart = true;\r\n    return {\r\n      cartItems: [...state.cartItems, action.data]\r\n    }\r\n    case 'REMOVE_ITEM':\r\n    var product = state.cartItems.find(product => product.id === action.id);\r\n    product.isAddedToCart = false;\r\n    return {\r\n      cartItems: state.cartItems.filter((element) => element.id !== action.id)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartItems;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport productItems from './productItems';\r\nimport cartItems from './cartItems';\r\n\r\nlet rootReducer = combineReducers({\r\n  productItems,\r\n  cartItems\r\n});\r\n\r\nexport default rootReducer;","//https://raw.githubusercontent.com/sraksh/sHOPcart/master/src/data/products.js\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n// create an object for the default data\r\nconst defaultState = {\r\n  \r\n};\r\n\r\n// CREATE STORE\r\nconst store = createStore(\r\n  rootReducer,\r\n  defaultState,\r\n  applyMiddleware(thunk)\r\n  // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\n\nconst wrapper = (\n  <Provider store={store}>\n    <App></App>\n  </Provider>\n);\n\n\nReactDOM.render(wrapper, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}